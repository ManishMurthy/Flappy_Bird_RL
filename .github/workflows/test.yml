name: Flappy Bird

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run basic environment tests
      run: |
        python -c "from flappy_env import FlappyBirdEnv
        env = FlappyBirdEnv(use_assets=False)
        obs = env.reset()
        print(f'Observation shape: {obs.shape}')
        assert obs.shape == (5,), 'Observation shape mismatch'
        for _ in range(10):
            action = 0 if obs[1] > 0 else 1  # Simple heuristic
            obs, reward, done, _ = env.step(action)
            if done: break
        print('Basic environment test passed!')
        env.close()"

    - name: Run DQN agent test (skip if no model)
      run: |
        if [ -f "models/flappy_dqn_final.pt" ]; then
          python -c "from flappy_env import FlappyBirdEnv
from dqn_agent import DQNAgent
import torch
device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
agent = DQNAgent(5, 2, device=device)
try:
    agent.load('models/flappy_dqn_final.pt')
    print('DQN agent test passed!')
except Exception as e:
    print(f'DQN agent test failed: {e}')"
        else
          echo "No model found, skipping DQN test"
        fi

    - name: Check code formatting
      run: |
        pip install black
        black --check *.py
